// <auto-generated />
using System;
using CoffeeHouse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoffeeHouse.Migrations
{
    [DbContext(typeof(CoffeeHouseContext))]
    partial class CoffeeHouseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoffeeHouse.Models.Category", b =>
                {
                    b.Property<string>("IdCategory")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            IdCategory = "C01",
                            Name = "Capuchino Coffee"
                        },
                        new
                        {
                            IdCategory = "C02",
                            Name = "CoffeeBag"
                        },
                        new
                        {
                            IdCategory = "C03",
                            Name = "Arabica Roasted"
                        },
                        new
                        {
                            IdCategory = "C04",
                            Name = "Arabica Green"
                        },
                        new
                        {
                            IdCategory = "C05",
                            Name = "Cold Brewed"
                        },
                        new
                        {
                            IdCategory = "C06",
                            Name = "Robusta Roasted"
                        },
                        new
                        {
                            IdCategory = "C07",
                            Name = "Uncategorized"
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.Customer", b =>
                {
                    b.Property<int>("IdCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCustomer"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCustomer");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            IdCustomer = 1,
                            Address = "Ha Noi",
                            Birthday = new DateTime(2003, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tuyen@gmail.com",
                            Fullname = "Nguyen Van Tuyen",
                            Phone = "112233556677"
                        },
                        new
                        {
                            IdCustomer = 2,
                            Address = "Thai Binh",
                            Birthday = new DateTime(2003, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quang@gmail.com",
                            Fullname = "Pham Huu Quang",
                            Phone = "00044455588"
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.OrderInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("IdOrders")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<float>("Reduce")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdOrders");

                    b.HasIndex("IdProduct");

                    b.ToTable("OrdersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdOrders = "Or01",
                            IdProduct = "P01",
                            Number = 2,
                            Reduce = 0f
                        },
                        new
                        {
                            Id = 2,
                            IdOrders = "Or02",
                            IdProduct = "P02",
                            Number = 1,
                            Reduce = 0f
                        },
                        new
                        {
                            Id = 3,
                            IdOrders = "Or03",
                            IdProduct = "P05",
                            Number = 3,
                            Reduce = 0f
                        },
                        new
                        {
                            Id = 4,
                            IdOrders = "Or04",
                            IdProduct = "P04",
                            Number = 1,
                            Reduce = 0f
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.Orders", b =>
                {
                    b.Property<string>("IdOrders")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdStaff")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdOrders");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdStaff");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            IdOrders = "Or01",
                            IdCustomer = 1,
                            IdStaff = 3,
                            Note = "Đã thanh toán",
                            OrderDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdOrders = "Or02",
                            IdCustomer = 2,
                            IdStaff = 1,
                            Note = "Chưa thanh toán",
                            OrderDate = new DateTime(2023, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdOrders = "Or03",
                            IdCustomer = 2,
                            IdStaff = 2,
                            Note = "Đã thanh toán",
                            OrderDate = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdOrders = "Or04",
                            IdCustomer = 1,
                            IdStaff = 1,
                            Note = "Đã thanh toán",
                            OrderDate = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.Products", b =>
                {
                    b.Property<string>("IdProduct")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("IdProduct");

                    b.HasIndex("IdCategory");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            IdProduct = "P01",
                            IdCategory = "C05",
                            Image = "~/images_icon/menu/list_menu/01.png",
                            Name = "Lost Planes",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P02",
                            IdCategory = "C01",
                            Image = "~/images_icon/menu/list_menu/02.png",
                            Name = "Saint Helena",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P03",
                            IdCategory = "C03",
                            Image = "~/images_icon/menu/list_menu/03.png",
                            Name = "Kona Peaberry",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P04",
                            IdCategory = "C04",
                            Image = "~/images_icon/menu/list_menu/04.png",
                            Name = "Blue Mountain",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P05",
                            IdCategory = "C07",
                            Image = "~/images_icon/menu/list_menu/05.png",
                            Name = "Ospina",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P06",
                            IdCategory = "C02",
                            Image = "~/images_icon/menu/list_menu/06.png",
                            Name = "Kupi Luwak",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P07",
                            IdCategory = "C01",
                            Image = "~/images_icon/menu/list_menu/07.png",
                            Name = "Capuchino Coffee",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P08",
                            IdCategory = "C06",
                            Image = "~/images_icon/menu/list_menu/08.png",
                            Name = "Balck Ivory",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P09",
                            IdCategory = "C02",
                            Image = "~/images_icon/menu/list_menu/09.png",
                            Name = "Americano Coffee",
                            Price = 50.25f
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.Staff", b =>
                {
                    b.Property<int>("IdStaff")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStaff");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            IdStaff = 1,
                            Address = "Thai Binh",
                            Birthday = new DateTime(2003, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "duong@gmail.com",
                            FullName = "Nguyen Thuy Duong",
                            Phone = "0111333444",
                            Position = "Manager"
                        },
                        new
                        {
                            IdStaff = 2,
                            Address = "Ha Noi",
                            Birthday = new DateTime(2003, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hduong@gmail.com",
                            FullName = "Hoang Duong",
                            Phone = "0222444555",
                            Position = "Staff"
                        },
                        new
                        {
                            IdStaff = 3,
                            Address = "Quang Ninh",
                            Birthday = new DateTime(2003, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phu@gmail.com",
                            FullName = "Nguyen Gia Phu",
                            Phone = "0111322666",
                            Position = "Staff"
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.Users", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "duongnt",
                            Email = "duong@gmail.com",
                            Password = "Duong@123",
                            Role = "Admin"
                        },
                        new
                        {
                            Username = "duongh",
                            Email = "hduong@gmail.com",
                            Password = "Hduong@123",
                            Role = "Admin"
                        },
                        new
                        {
                            Username = "phung",
                            Email = "phu@gmail.com",
                            Password = "Phu@1234",
                            Role = "Admin"
                        },
                        new
                        {
                            Username = "tuyennv",
                            Email = "tuyen@gmail.com",
                            Password = "Tuyen@123",
                            Role = "Customer"
                        },
                        new
                        {
                            Username = "quangph",
                            Email = "quang@gmail.com",
                            Password = "Quang@123",
                            Role = "Customer"
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.OrderInfo", b =>
                {
                    b.HasOne("CoffeeHouse.Models.Orders", "Orders")
                        .WithMany()
                        .HasForeignKey("IdOrders")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeHouse.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("CoffeeHouse.Models.Orders", b =>
                {
                    b.HasOne("CoffeeHouse.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeHouse.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("IdStaff")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CoffeeHouse.Models.Products", b =>
                {
                    b.HasOne("CoffeeHouse.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
